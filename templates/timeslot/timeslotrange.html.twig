{#
 # -------------------------------------------------------------------------
 # Deploy plugin for GLPI
 # -------------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of Deploy.
 #
 # Deploy is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
 # Deploy is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Deploy. If not, see <http://www.gnu.org/licenses/>.
 # -------------------------------------------------------------------------
 # @copyright Copyright (C) 2022-2024 by Deploy plugin team.
 # @license   GPLv3 https://www.gnu.org/licenses/gpl-3.0.html
 # @link      https://github.com/pluginsGLPI/deploy
 # -------------------------------------------------------------------------
 #}

{% set header %}
    <thead>
        <tr>
            <th class="">
                {{ __('Day')}}
            </th>
            <th class="">
                {{ __('Timeslot', 'deploy')}}
            </th>
            <th class="">
                {{ __('All Day', 'deploy')}}
            </th>
            {% for i in 0..24 %}
                <th class="text-center">
                    {{ '%02d'|format(i) }}
                </th>
            {% endfor %}
            <th class="">
                {{ __('Add', 'deploy')}}
            </th>
            <th class="">
                {{ __('Delete', 'deploy')}}
            </th>
        </tr>
    </thead>
{% endset %}
<div class="container-fluid">
    <div class="card card-sm search-card">
        <div class="table-responsive">
            <table class="search-results table table-hover table-card" id="{{ table_id }}">
                {{ header }}
                <tbody class="sortable-subitems">
                    {% for key, label in days_list %}
                        <tr>
                            <td> {{ label }} </td>
                            <td class="col-auto">
                                <input class="form-check-input" type="checkbox" value="" id="notimeslot{{ key }}" {{ timeslots_data[key][0]['checked'] }}>
                            </td>
                            <td class="col-auto">
                                <button type="" id="allday{{ key }}" class="btn btn-primary btn-sm"><i class="ti ti-clock-24"></i></button>
                            </td>
                            <td colspan="25">
                                <div class="mx-2" id="slider{{ key }}"></div>
                                {% for tkey, tvalue in timeslots_data[key] %}
                                    <input type="hidden" id="value{{ tkey }}_start{{ key }}" name="value{{ tkey }}_start{{ key }}" value="{{ tvalue['starttime'] }}">
                                    <input type="hidden" id="value{{ tkey }}_end{{ key }}" name="value{{ tkey }}_end{{ key }}" value="{{ tvalue['endtime'] }}">
                                {% endfor %}
                            </td>
                            <td class="col-auto">
                                <button type="" id="addrange{{ key }}" class="btn btn-primary btn-sm"><i class="ti ti-plus"></i></button>
                            </td>
                            <td class="col-auto">
                                <button type="" id="delrange{{ key }}" class="btn btn-primary btn-sm"><i class="ti ti-minus"></i></button>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
                {{ header }}
            </table>
        </div>
    </div>
</div>
<div class="card-body">
    <form id="rangeform" action="{{get_plugin_web_dir('deploy') }}/front/timeslotrange.form.php" method="post">
        <input type="hidden" id="timeslot" name="timeslot">
        <input type="hidden" name="plugin_deploy_timeslots_id" value="{{ timeslot_id }}">
        <input type="hidden" name="action" value="save_timeslot">
        <input type="hidden" name="_glpi_csrf_token" value="{{ csrf_token() }}">
        <div class="text-end">
            <button type="button" id="everyday" class="btn btn-outline-secondary"><i class="ti ti-24-hours"></i> &nbsp{{ __('Everyday') }}</button>
            <button type="submit" class="btn btn-primary"><i class="ti ti-device-floppy"></i> &nbsp{{ __('Save') }}</button>
        </div>
    </form>
</div>

<script>
    let timeslot = {};
    let timeslotsData = {{ timeslots_data|json_encode|raw }};
    let everydayButton = document.getElementById('everyday');
    let daysLength = {{ days_list|length }};

    function setSliderValues(slider, values) {
        slider.noUiSlider.set(values);
    }

    function toggleSlider(slider, checkbox, addRangeButton, delRangeButton, i) {
        if (checkbox.checked) {
            addRangeButton.removeAttribute('disabled');
            delRangeButton.removeAttribute('disabled');
            setSliderValues(slider, timeslotsData[i] ? timeslotsData[i].map(slot => [slot.starttime, slot.endtime]).flat() : [8, 12, 14, 18]);
            slider.style.display = 'block';
        } else {
            addRangeButton.setAttribute('disabled', true);
            delRangeButton.setAttribute('disabled', true);
            slider.style.display = 'none';
        }
    }

    for (let i = 1; i <= daysLength; i++) {
        let slider = document.getElementById('slider' + i);
        let checkbox = document.getElementById('notimeslot' + i);
        let alldayButton = document.getElementById('allday' + i);
        let addRangeButton = document.getElementById('addrange' + i);
        let delRangeButton = document.getElementById('delrange' + i);

        timeslot[i] = {
            is_enable: checkbox.checked
        };

        noUiSlider.create(slider, {
            start: timeslotsData[i] ? timeslotsData[i].map(slot => [slot.starttime, slot.endtime]).flat() : [0, 0, 0, 0],
            connect: [false, ...Array(timeslotsData[i].length * 2).fill().flatMap((_, idx) => idx % 2 === 0 ? [true, false] : [])],
            behaviour: 'drag',
            step: 1,
            range: {
                'min': 0,
                'max': 24
            },
            margin: 1,
        });

        slider.noUiSlider.on('update', function(values, handle) {
            timeslot[i]['is_enable'] = checkbox.checked;
            let order = Math.floor(handle / 2);
            let start = document.getElementById('value' + order + '_start' + i);
            let end = document.getElementById('value' + order + '_end' + i);
            if (handle % 2 === 1) {
                end.value = values[handle];
            } else {
                start.value = values[handle];
            }
            timeslot[i][order] = {
                starttime: start.value,
                endtime: end.value
            };
            document.getElementById('timeslot').value = JSON.stringify(timeslot);
        });

        // Disable slider if checkbox is not checked
        toggleSlider(slider, checkbox, addRangeButton, delRangeButton, i);

        // Enable or disable slider on checkbox change
        checkbox.addEventListener('change', function() {
            toggleSlider(slider, this, addRangeButton, delRangeButton, i);
        });

        alldayButton.addEventListener('click', function(event) {
            timeslot[i] = {
                0: {
                    starttime: '0.00',
                    endtime: '24.00'
                },
                is_enable: true
            };
            document.getElementById('timeslot').value = JSON.stringify(timeslot);
            document.getElementById("rangeform").submit();
        });

        // Disable add button if there are already 12 ranges
        if (Object.keys(timeslot[i]).length - 1 >= 12) {
            addRangeButton.setAttribute('disabled', true);
        }

        addRangeButton.addEventListener('click', function(event) {
            let lastKey = Object.keys(timeslot[i]).length - 1;
            timeslot[i][lastKey + 1] = {
                starttime: '23.00',
                endtime: '24.00'
            };
            document.getElementById('timeslot').value = JSON.stringify(timeslot);
            document.getElementById("rangeform").submit();
        });

        // Disable delete button if there is only 1 range
        if (Object.keys(timeslot[i]).length - 1 === 1) {
            delRangeButton.setAttribute('disabled', true);
        }

        delRangeButton.addEventListener('click', function(event) {
            let lastKey = Object.keys(timeslot[i]).length - 1;
            delete timeslot[i][lastKey - 1];
            document.getElementById('timeslot').value = JSON.stringify(timeslot);
            document.getElementById("rangeform").submit();
        });

    }

    everydayButton.addEventListener('click', function(event) {
        for (let i = 1; i <= daysLength; i++) {
            timeslot[i] = {
                0: {
                    starttime: '0.00',
                    endtime: '24.00'
                },
                is_enable: true
            };
            document.getElementById('timeslot').value = JSON.stringify(timeslot);
            document.getElementById("rangeform").submit();
        }
    });
</script>